name: Cleanup CT Error Releases

on:
  schedule:
    - cron: '0 */6 * * *'  # Run every 6 hours
  workflow_dispatch:  # Allow manual triggering

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt-get install jq

      - name: Delete Old Error Releases
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        run: |
          echo "Fetching CT Analysis Error releases..."
          
          # Get all releases with pagination
          page=1
          rm -f releases.json  # Clear any existing file
          total_releases=0
          now=$(date +%s)
          
          while true; do
            echo "Fetching page $page..."
            response=$(curl -s \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/releases?per_page=100&page=${page}")
            
            # Check if we got any releases
            batch_count=$(echo "$response" | jq '. | length')
            if [ "$batch_count" -eq "0" ]; then
              break
            fi
            
            # Process each release
            echo "$response" | jq -c '.[]' | while read -r release; do
              tag=$(echo "$release" | jq -r '.tag_name')
              if [[ $tag == ct_analysis_error-* ]]; then
                created_at=$(echo "$release" | jq -r '.created_at')
                created_ts=$(date -d "$created_at" +%s)
                age_hours=$(( (now - created_ts) / 3600 ))
                
                if [ $age_hours -ge 24 ]; then
                  release_id=$(echo "$release" | jq -r '.id')
                  echo "Deleting old error release: $tag (${age_hours}h old)"
                  curl -X DELETE \
                    -H "Authorization: Bearer $GITHUB_TOKEN" \
                    -H "Accept: application/vnd.github.v3+json" \
                    "https://api.github.com/repos/${{ github.repository }}/releases/$release_id"
                  echo "Deleted."
                  sleep 1
                else
                  echo "Skipping recent error release: $tag (${age_hours}h old)"
                fi
              fi
            done
            
            ((page++))
          done 