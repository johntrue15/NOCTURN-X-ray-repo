name: Fetch MorphoSource media (by ID)

on:
  workflow_dispatch:
    inputs:
      media_id:
        description: 'MorphoSource media ID (e.g., 000788351)'
        required: true
      use_statement:
        description: 'Use statement for download POST (Mesh only) - must be at least 50 characters'
        required: false
        default: 'Downloading this data as part of a research project.'  # 52 characters
      use_categories:
        description: 'Pipe- or comma-separated categories (Mesh). Tip: "Research" is widely accepted.'
        required: false
        default: 'Research'
      use_category_other:
        description: 'If you prefer not to send use_categories, put your free-text reason here'
        required: false
        default: ''

permissions:
  contents: read

jobs:
  fetch-and-upload:
    runs-on: ubuntu-latest
    concurrency:
      group: morphosource-media-${{ github.ref }}
      cancel-in-progress: false

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: pip install requests

      - name: Fetch media and produce artifact
        id: fetch
        env:
          # Target + media
          BASE_URL: https://www.morphosource.org
          MEDIA_ID: ${{ github.event.inputs.media_id }}

          # Auth (REQUIRED): your personal MorphoSource API key
          MORPHOSOURCE_API_KEY: ${{ secrets.MORPHOSOURCE_API_KEY }}

          # Use the working format: Authorization: <API_KEY> (no Bearer prefix)
          # This matches: curl -H "Authorization: $API_KEY" https://www.morphosource.org/api/media/000788351
          AUTH_ORDER: raw               # Use raw API key in Authorization header (confirmed working)
          EXTRA_KEY_HEADERS: x-api-key,api-key
          APPEND_API_KEY_PARAM: "1"     # also try ...?api_key=<KEY> on the URL (defensive)
          VERIFY_SSL: "true"
          EXTRA_HEADERS_JSON: ""         # optional extras as JSON

          # Download intent inputs (mesh only)
          USE_STATEMENT: ${{ github.event.inputs.use_statement }}
          USE_CATEGORIES: ${{ github.event.inputs.use_categories }}
          USE_CATEGORY_OTHER: ${{ github.event.inputs.use_category_other }}
          AGREEMENTS_ACCEPTED: "true"

          # Behavior + debugging
          ARTIFACT_DIR: morphosource_${{ github.event.inputs.media_id }}_artifact
          DEBUG: "1"
          RAW_MAX_BYTES: "524288"       # 512 KiB raw preview cap
          FALLBACK_TO_OTHER: "1"        # auto-retry with use_category_other on 400 invalid categories

        run: |
          python .github/scripts/fetch_morphosource_media.py

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: morphosource-${{ github.event.inputs.media_id }}-${{ steps.fetch.outputs.media_type || 'unknown' }}
          path: ${{ steps.fetch.outputs.artifact_dir }}
          if-no-files-found: warn
          retention-days: 7

      - name: Job summary
        run: |
          {
            echo "### MorphoSource fetch summary"
            echo ""
            echo "- Media ID: \`${{ github.event.inputs.media_id }}\`"
            echo "- Media type: **${{ steps.fetch.outputs.media_type || 'unknown' }}**"
            echo "- Action: **${{ steps.fetch.outputs.action || 'none' }}**"
            echo "- Result: **${{ steps.fetch.outputs.result || 'n/a' }}**"
            echo "- Artifact dir: \`${{ steps.fetch.outputs.artifact_dir }}\`"
            echo "- Notes: ${{ steps.fetch.outputs.notes }}"
          } >> "$GITHUB_STEP_SUMMARY"
