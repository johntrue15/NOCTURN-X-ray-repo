name: MorphoSource Analysis Workflow

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Parse MorphoSource Data"]
    types: [completed]

jobs:
  check_and_analyze:
    runs-on: ubuntu-22.04
    outputs:
      is_morphosource: ${{ steps.check_morpho.outputs.is_morphosource }}
      has_analysis: ${{ steps.check_existing.outputs.has_analysis }}
      release_body: ${{ steps.fetch_release.outputs.release_body }}
      release_tag: ${{ steps.fetch_release.outputs.release_tag }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      # ... (existing steps) ...

  url_check:
    needs: check_and_analyze
    if: |
      needs.check_and_analyze.outputs.is_morphosource == 'true' &&
      needs.check_and_analyze.outputs.has_analysis != 'true'
    runs-on: ubuntu-22.04
    outputs:
      has_media_error: ${{ steps.url_check.outputs.has_media_error }}
      has_server_error: ${{ steps.url_check.outputs.has_server_error }}
      has_no_file_error: ${{ steps.url_check.outputs.has_no_file_error }}
      has_mesh: ${{ steps.type_check.outputs.has_mesh }}
      has_volumetric_images: ${{ steps.type_check.outputs.has_volumetric_images }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        
      # ... (existing steps) ...

      - name: Run URL check
        id: url_check
        run: |
          python .github/scripts/url_screenshot_check.py release_body.txt || true
          
          if [ -f "url_check_status.json" ]; then
            status=$(cat url_check_status.json | jq -r .status)
            if [ "$status" = "media_error" ]; then
              echo "has_media_error=true" >> "$GITHUB_OUTPUT"
              echo "has_server_error=false" >> "$GITHUB_OUTPUT"
              echo "has_no_file_error=false" >> "$GITHUB_OUTPUT"
            elif [ "$status" = "server_error" ]; then
              echo "has_media_error=false" >> "$GITHUB_OUTPUT"
              echo "has_server_error=true" >> "$GITHUB_OUTPUT"
              echo "has_no_file_error=false" >> "$GITHUB_OUTPUT"
            elif [ "$status" = "no_file_error" ]; then
              echo "has_media_error=false" >> "$GITHUB_OUTPUT"
              echo "has_server_error=false" >> "$GITHUB_OUTPUT"
              echo "has_no_file_error=true" >> "$GITHUB_OUTPUT"
            else
              echo "has_media_error=false" >> "$GITHUB_OUTPUT"
              echo "has_server_error=false" >> "$GITHUB_OUTPUT"
              echo "has_no_file_error=false" >> "$GITHUB_OUTPUT"
            fi
          else
            echo "has_media_error=false" >> "$GITHUB_OUTPUT"
            echo "has_server_error=false" >> "$GITHUB_OUTPUT"
            echo "has_no_file_error=false" >> "$GITHUB_OUTPUT"
          fi

      # ... (existing steps) ...

  # ... (existing jobs) ...

  handle_errors:
    needs: [check_and_analyze, url_check, process_3d, process_2d]
    if: |
      always() && 
      needs.check_and_analyze.outputs.is_morphosource == 'true' &&
      (failure() || 
       needs.url_check.outputs.has_media_error == 'true' || 
       needs.url_check.outputs.has_server_error == 'true' ||
       needs.url_check.outputs.has_no_file_error == 'true')
    runs-on: ubuntu-22.04
    steps:
      # ... (existing steps) ...